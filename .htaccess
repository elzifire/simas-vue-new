# ===========================
# .htaccess untuk Vue.js SPA
# ===========================
# Letakkan file ini di folder root hasil build (mis. dist/ atau public/)

# 1) Dasar
<IfModule mod_rewrite.c>
  RewriteEngine On
  # Force HTTPS (jika server pakai SSL)
  RewriteCond %{HTTPS} !=on
  RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
</IfModule>

# 2) Nonaktifkan directory listing
Options -Indexes

# 3) Block akses ke file/dir sensitif
<FilesMatch "(^\.|\.env$|composer\.(json|lock)$|package\.json|package-lock\.json|yarn\.lock|webpack\.config\.js|gulpfile\.js|config\.php|credentials\.json)">
  Require all denied
</FilesMatch>

# Block direktori yang tidak ingin diakses secara langsung
RedirectMatch 403 (?i)^/(?:\.git|node_modules|tests|docs)(/|$)

# 4) Security headers (sesuaikan CSP jika perlu)
<IfModule mod_headers.c>
  # Only set HSTS on HTTPS connections
  <If "%{HTTPS} == 'on'">
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
  </If>

  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set X-Content-Type-Options "nosniff"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  Header always set X-XSS-Protection "1; mode=block"
  Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"

  # Content-Security-Policy
  # Catatan: CSP bisa memutuskan beberapa resource (CDN, fonts, inline scripts). Sesuaikan dengan kebutuhan.
  Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https: data:; connect-src 'self' https: wss:; frame-ancestors 'self';"

  # Prevent MIME-type sniffing for older browsers
  Header always set X-Download-Options "noopen"
</IfModule>

# 5) Caching / Expires (mod_expires)
<IfModule mod_expires.c>
  ExpiresActive On

  # HTML: jangan cache terlalu lama (biar update cepat)
  ExpiresByType text/html "access plus 0 seconds"
  Header always set Cache-Control "no-cache, no-store, must-revalidate" env=!dont_cache_html

  # CSS/JS: versi static hashed → cache lama ok
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
  ExpiresByType application/x-javascript "access plus 1 year"

  # Images: cache lama
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
  ExpiresByType image/webp "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 year"

  # Fonts
  ExpiresByType font/woff2 "access plus 1 year"
  ExpiresByType font/woff "access plus 1 year"
  ExpiresByType application/font-woff "access plus 1 year"
</IfModule>

# 6) Override cache for index.html specifically (SPA entry point)
<FilesMatch "index\.html$">
  <IfModule mod_headers.c>
    Header always set Cache-Control "no-cache, no-store, must-revalidate"
    Header always set Pragma "no-cache"
    Header always set Expires "0"
  </IfModule>
</FilesMatch>

# 7) SPA fallback — jika file tidak ada, arahkan ke index.html
<IfModule mod_rewrite.c>
  RewriteEngine On
  # Jangan rewrite kalau file/folder benar-benar ada
  RewriteCond %{REQUEST_FILENAME} -f [OR]
  RewriteCond %{REQUEST_FILENAME} -d
  RewriteRule ^ - [L]

  # Otherwise, serve index.html
  RewriteRule ^ index.html [L]
</IfModule>

# 8) Small performance tweaks
<IfModule mod_deflate.c>
  # Enable gzip compression
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json application/xml
</IfModule>

# ===========================
# Catatan / rekomendasi:
# - Jika aplikasi mu memuat resource dari CDN (Google Fonts, Sentry, analytics), tambahkan domain tersebut ke CSP (script-src, connect-src, font-src, img-src).
# - CSP di atas mengizinkan 'unsafe-inline' dan 'unsafe-eval' untuk kompatibilitas; hapus keduanya bila yakin tidak perlu.
# - Pastikan modul Apache (mod_rewrite, mod_headers, mod_expires, mod_deflate) aktif.
# - Jika server berada di belakang load balancer / proxy, pemeriksaan HTTPS bisa berbeda; sesuaikan aturan force-HTTPS jika perlu.
# ===========================
